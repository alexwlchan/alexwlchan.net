[build]
  base = ""
  publish = "_site/"

# I test my security headers with https://securityheaders.com/
[[headers]]
  for = "/*"

  [headers.values]
    # https://scotthelme.co.uk/hardening-your-http-response-headers/#content-security-policy
    #
    #   - youtube-nocookie.com is used for YouTube embeds
    #   - polyfill.io and cdn.jsdelivr.net are used for MathJax
    #
    content-security-policy = """\
      default-src 'self' 'unsafe-inline' \
      https://youtube-nocookie.com https://www.youtube-nocookie.com; \
      script-src 'self' 'unsafe-inline' \
      https://polyfill.io \
      https://cdn.jsdelivr.net \
      'unsafe-eval'; \
      font-src \
      https://polyfill.io \
      https://cdn.jsdelivr.net; \
      img-src 'self' 'unsafe-inline' data: \
    """

    # https://scotthelme.co.uk/a-new-security-header-feature-policy/
    # https://scotthelme.co.uk/goodbye-feature-policy-and-hello-permissions-policy/
    permissions-policy = """\
      geolocation 'none'; \
      midi 'none'; \
      notifications 'none'; \
      push 'none'; \
      sync-xhr 'none'; \
      microphone 'none'; \
      camera 'none'; \
      magnetometer 'none'; \
      gyroscope 'none'; \
      vibrate 'none';
      payment 'none' \
    """

    # https://scotthelme.co.uk/a-new-security-header-referrer-policy/
    referrer-policy = "no-referrer-when-downgrade"

    # https://scotthelme.co.uk/hardening-your-http-response-headers/#strict-transport-security
    strict-transport-security = "max-age=31536000; includeSubDomains"

    # https://scotthelme.co.uk/hardening-your-http-response-headers/#x-content-type-options
    x-content-type-options = "nosniff"

    # https://scotthelme.co.uk/hardening-your-http-response-headers/#x-frame-options
    x-frame-options = "DENY"

    # https://scotthelme.co.uk/hardening-your-http-response-headers/#x-xss-protection
    x-xss-protection = "1; mode=block"

# I can set long-lived caches on all these static assets because I treat
# most files as immutable by filename -- if I modify a file, I'll upload a new
# file with a different name, so it won't be a cache hit.
#
# The one exception is CSS files, but I cache-bust those by passing a query parameter
# that includes the hash of my CSS source.

[[headers]]
  for = "/files/*"

  [headers.values]
		cache-control = "public, max-age=31536000"

[[headers]]
  for = "/images/*"

  [headers.values]
		cache-control = "public, max-age=31536000"

[[headers]]
  for = "/theme/*"

  [headers.values]
		cache-control = "public, max-age=31536000"
