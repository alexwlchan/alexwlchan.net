@use "sass:math";

@import "variables.scss";

@import "_settings.scss";
@import "_functions.scss";
@import "mixins.scss";

body {
  /* Pattern from https://www.toptal.com/designers/subtlepatterns/white-waves-pattern/,
     then contrast dropped */
  background-image: url('/theme/white-waves-transparent.png');
}

h1, h2,
.title a:visited,
.post__permalink a,
.post__permalink a:visited {
  color: $primary-color-light;
}

// Links should be coloured red, but darker if they've been visited (or
// lighter in dark mode).
//
// However, I can override this in certain scenarios with the `novisited` class.
//
//      <a href="/example">new link</a>
//        ~> will be coloured default red
//
//      <a href="/example">link I’ve visited</a>
//        ~> will be coloured dark red
//
//      <a href="/example" class="novisited">link I’ve visited</a>
//        ~> will be coloured default red
//
a {
  @include link_styles($primary-color-light, 0.2);

  &:visited:not(.novisited) {
    @include link_styles(darken($primary-color-light, 15%), 0.2);
  }

  .title &:visited {
    @include link_styles(darken($primary-color-light, 15%), 0.2);
  }
}

a.download {
  border-color: $primary-color-light;

  // We need to override the background styles
  color: $primary-color-light !important;
  background: rgba(white, 0.4) !important;

  // Although this is supplied by the link style, we need to set it again
  // here because the `background` rule above overrides the `a:hover` rule.
  &:hover {
    background: rgba($primary-color-light, 0.2) !important;
  }
}

body, .post_cards .card a {
  color: $body-color-light;
}

pre, blockquote {
  border-color: rgba($primary-color-light, 0.1);
  background-color: hsla(hue($primary-color-light), saturation($primary-color-light), 95%, 0.4);
}

.post_cards .card {
  @include card_light_styles($primary-color-light);

  /* This gives cards a v subtle solid background colour, to make them
   * stand out from the textured background.
   */
  background: #fafafa;
}

nav {
  background: url('/headers/specktre_#{colorToHexString($primary-color-light)}.png') $primary-color-light;
  background-size: auto 100%;
}

footer {
  background: $primary-color-light;
}

.post_cards .card .card_posting_date p,
.title.linkpost_title::after {
  color: $accent-grey-light;
}

.meta, figcaption {
  color: $accent-grey-light;

  a, a:visited {
    color: $accent-grey-light !important;
    &:hover {
      background: rgba($accent-grey-light, 0.2) !important;
    }
  }
}

svg[role="separator"] rect {
  fill: $midtone-grey-light;
}

@media (prefers-color-scheme: dark) {
  body {
    background-image: url('/theme/black-waves-transparent.png');
  }

  a {
    @include link_styles($primary-color-dark, 0.2);

    &:visited:not(.novisited) {
      @include link_styles(lighten($primary-color-dark, 15%), 0.1);
    }

    .title &:visited {
      @include link_styles(lighten($primary-color-dark, 15%), 0.2);
    }
  }

  h1, h2,
  .title a:visited,
  .post__permalink a,
  .post__permalink a:visited {
    color: $primary-color-dark;
  }

  a.download {
    border-color: $primary-color-dark;

    // We need to override the background styles
    color: $primary-color-dark !important;
    background: rgba(black, 0.6) !important;

    // Although this is supplied by the link style, we need to set it again
    // here because the `background` rule above overrides the `a:hover` rule.
    &:hover {
      background: rgba($primary-color-dark, 0.4) !important;
    }
  }

  body, .post_cards .card a {
    color: $body-color-dark;
  }

  pre, blockquote {
    border-color: rgba($primary-color-dark, 0.3);
    background-color: hsla(hue($primary-color-dark), saturation($primary-color-dark), 5%, 0.7);
  }

  .post_cards .card {
    @include card_dark_styles($primary-color-dark);
    background: #0d0d0d;
  }

  .post_cards .card .card_posting_date p,
  .title.linkpost_title::after {
    color: $accent-grey-dark;
  }

  .meta, figcaption {
    color: $accent-grey-dark;

    a, a:visited {
      color: $accent-grey-dark !important;
      &:hover {
        background: rgba($accent-grey-dark, 0.2) !important;
      }
    }
  }

  svg[role="separator"] rect {
    fill: $midtone-grey-dark;
  }

  // see https://web.dev/prefers-color-scheme/#re-colorize-and-darken-photographic-images
  img:not([src*='.svg']) {
    filter: grayscale(10%);
  }

  // Add a white background behind images, so any dark elements become
  // visible.  Eventually I'd like to support uploading multiple variants
  // and make this conditional, but not in V1.
  img, svg[role="img"] {
    background: white;
  }

  // fix for the separator on the homepage
  .separator svg[role="img"] {
    background: none;
  }
}

img.screenshot {
  border-color: $light-grey;
}

@media print {
  nav {
    background: none;
    border-bottom: $border-width solid $primary-color-light;
  }

  #nav_inner {
    color: $primary-color-light;
  }

  footer {
    display: none;
  }

  .post_cards .card .card_posting_date p,
  .meta,
  figcaption {
    color: $body-color-light;
  }

  .meta, figcaption {
    color: $body-color-light;

    a {
      color: $body-color-light;
    }
  }
}
