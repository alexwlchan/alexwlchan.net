/* Images on the site are usually the same width as the accompanying text.
 *
 * The text has certain constraints on width: it can't be too wide or
 * it becomes unreadable, and you want some left/right margins so it's
 * not pressed against the edge of the screen.
 *
 * This file contains two sets of styles to allow images to extend
 * beyond the width of the text:
 *
 *    - A `wide_img` can be wider than the text, so the image appears
 *      bigger on large screens.
 *
 *      This is useful on photography posts, where the images are the
 *      main focus.
 *
 *    - A `fullwidth_img` or `wide_img` can go edge-to-edge on small screens,
 *      i.e. phones.
 *
 *      This is applicable to any image, but images have to opt-in by using
 *      one of the two CSS classes.  It could be applied to any image in
 *      theory (e.g. a 500px wide image could extend into the margin when
 *      the screen is narrower than 500px), but that's more complicated.
 *
 *      For now, I'm happy for it to be opt-in on newer posts.
 *
 */

$max-width-image-overflow: 200px;

$full-width-breakpoint: $max-width + $max-width-image-overflow + $default-padding * 2;
$gradual-width-breakpoint: $max-width + $default-padding * 2;

@media screen and (min-width: $full-width-breakpoint) {
  .wide_img {
    max-width: calc(100% + #{$max-width-image-overflow});
    margin-left:  -$max-width-image-overflow / 2;
    margin-right: -$max-width-image-overflow / 2;

    figcaption {
      padding-left:  $max-width-image-overflow / 2;
      padding-right: $max-width-image-overflow / 2;
    }
  }
}

@media screen and (min-width: $gradual-width-breakpoint) and (max-width: $full-width-breakpoint) {
  .wide_img {
    // Screen size less padding on either side
    max-width: calc(100vw - #{2 * $default-padding});

    // 50% of the screen width, less the width of the text, less the padding
    margin-left:  calc(#{$default-padding} + #{$max-width / 2} - 50vw);
    margin-right: calc(#{$default-padding} + #{$max-width / 2} - 50vw);

    figcaption {
      padding-left:  calc(50vw - #{$default-padding} - #{$max-width / 2});
      padding-right: calc(50vw - #{$default-padding} - #{$max-width / 2});
    }
  }
}

// This allows me to mark images as "full-width", in which case, they'll
// fill the whole screen on narrow devices (e.g. mobile screens).
//
// There's a slight weirdness when the screen is exactly max-width; images
// suddenly jump from having full margin to zero margin.  Ideally it would
// gradually decrease as the screen narrows, but I'm going to leave it as-is
// rather than worry too much about this edge case.

@media screen and (max-width: $max-width) {
  .wide_img, .fullwidth_img {
    width:        calc(100% + #{$default-padding} * 2 + env(safe-area-inset-left, 0px) + env(safe-area-inset-right, 0px));
    max-width:    calc(100% + #{$default-padding} * 2 + env(safe-area-inset-left, 0px) + env(safe-area-inset-right, 0px));
    margin-left:  calc(-1 * (#{$default-padding} + env(safe-area-inset-left,  0px)));
    margin-right: calc(-1 * (#{$default-padding} + env(safe-area-inset-right, 0px)));
  }
}

