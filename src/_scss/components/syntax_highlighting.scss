/* Code highlighting styles.
 *
 * These were originally generated by running:
 *
 *     pygmentize -S default -f html
 *
 * but over time I've adjusted them, including adding dark mode support,
 * and replacing certain colours which had insufficient contrast.
 */

pre {
  .hll { background-color: #ffffcc }
  .c { color: #408080; font-style: italic } /* Comment */

  // This style is deliberately disabled because sometimes it's either:
  //
  //    1. Wrong, or
  //    2. I'm deliberately writing code which is "broken" in some way
  //       to make a point, in which case the highlight is unhelpful.
  //
  //  .err { border: 1px solid #FF0000 } /* Error */

  /* Keyword, Keyword.{Constant, Declaration, Namespace, Reserved} */
  /* Name.Tag, Name.Builtin.Pseudo */
  .k, .kc, .kd, .kn, .kr, .nt, .bp {
    color: #008000; font-weight: bold;
  }

  .cp { color: #BC7A00 } /* Comment.Preproc */

  /* Comment.{Hashbang, Multiline, PreprocFile, Single, Special} */
  .ch, .cm, .cpf, .c1, .cs {
    color: #305F5F; font-style: italic;
  }

  /* Generic.{Heading, Prompt} */
  .gh, .gp {
    color: #000080; font-weight: bold
  }

  .gd { color: #A00000 } /* Generic.Deleted */
  .ge { font-style: italic } /* Generic.Emph */
  .gr { color: #FF0000 } /* Generic.Error */
  .gi { color: #00A000 } /* Generic.Inserted */
  .go { color: #888888 } /* Generic.Output */
  .gs { font-weight: bold } /* Generic.Strong */
  .gu { color: #800080; font-weight: bold } /* Generic.Subheading */
  .gt { color: #0044DD } /* Generic.Traceback */
  .kp { color: #008000 } /* Keyword.Pseudo */
  .kt { color: #B00040 } /* Keyword.Type */
  .na { color: #7D9029 } /* Name.Attribute */
  .nb { color: #008000 } /* Name.Builtin */
  .nc { color: #0000FF; font-weight: bold } /* Name.Class */
  .no { color: #880000 } /* Name.Constant */
  .nd { color: #AA22FF } /* Name.Decorator */
  .ni { color: #999999; font-weight: bold } /* Name.Entity */
  .ne { color: #D2413A; font-weight: bold } /* Name.Exception */
  .nf { color: #0000FF } /* Name.Function */
  .nl { color: #A0A000 } /* Name.Label */
  .nn { color: #0000FF; font-weight: bold } /* Name.Namespace */
  .nv { color: #19177C } /* Name.Variable */
  .ow { color: #AA22FF; font-weight: bold } /* Operator.Word */
  .w { color: #bbbbbb } /* Text.Whitespace */

  /* Operator */
  /* Literal.Number, Literal.Number.{Bin, Float, Hex, Integer, Oct, Integer.Long} */
  .o, .m, .mb, .mf, .mh, .mi, .mo, .il {
    color: #585858;
  }

  /* Literal.String, Literal.String.{Affix, Backtick, Char, Delimiter, Doc, Double, Heredoc, Single} */
  .s, .sa, .sb, .sc, .dl, .sd, .s2, .sh, .s1 {
    color: #BA2121;
  }

  /* Literal.String.Doc */
  .sd {
    font-style: italic;
  }

  .se { color: #BB6622; font-weight: bold } /* Literal.String.Escape */
  .si { color: #BB6688; font-weight: bold } /* Literal.String.Interpol */
  .sx { color: #008000 } /* Literal.String.Other */
  .sr { color: #BB6688 } /* Literal.String.Regex */
  .ss { color: #19177C } /* Literal.String.Symbol */
  .fm { color: #0000FF } /* Name.Function.Magic */

  /* Name.Variable.{Class, Globa, Instance, Magic} */
  .vc, .vg, .vi, .vm {
    color: #19177C;
  }

  .rustc_error   { color: #d01c11; font-weight: bold; }
  .rustc_warning { color: #11d01c; }
  .rustc_value   { color: #d0a311; }
  .rustc_lineno  { color: #6871ff; }
}

@media (prefers-color-scheme: dark) {
  pre {
    .hll { background-color: #424200 }
    .c { color: #418383; } /* Comment */

    // This style is deliberately disabled because sometimes it's either:
    //
    //    1. Wrong, or
    //    2. I'm deliberately writing code which is "broken" in some way
    //       to make a point, in which case the highlight is unhelpful.
    //
    //  .err { border: 1px solid #f40000 } /* Error */

    /* Keyword, Keyword.{Constant, Declaration, Namespace, Reserved} */
    /* Name.Tag, Name.Builtin.Pseudo */
    .k, .kc, .kd, .kn, .kr, .nt, .bp {
      color: #008500;
    }

    .cp { color: #9d6600 } /* Comment.Preproc */

    /* Comment.{Hashbang, Multiline, PreprocFile, Single, Special} */
    .ch, .cm, .cpf, .c1, .cs {
      color: #51A4A4;
    }

    /* Generic.{Heading, Prompt} */
    .gh, .gp {
      color: #d6d6fe;
    }

    .gd { color: #fe6767 } /* Generic.Deleted */
    .gr { color: #f40000 } /* Generic.Error */
    .gi { color: #008600 } /* Generic.Inserted */
    .go { color: #737373 } /* Generic.Output */
    .gu { color: #ff61fe } /* Generic.Subheading */
    .gt { color: #5388ff } /* Generic.Traceback */
    .kp { color: #008500 } /* Keyword.Pseudo */
    .kt { color: #ff3a82 } /* Keyword.Type */
    .na { color: #6b7c23 } /* Name.Attribute */
    .nb { color: #008500 } /* Name.Builtin */
    .nc { color: #9393ff } /* Name.Class */
    .no { color: #ff8d8d } /* Name.Constant */
    .nd { color: #ab27ff } /* Name.Decorator */
    .ni { color: #686868 } /* Name.Entity */
    .ne { color: #d2453e } /* Name.Exception */
    .nf { color: #9393ff } /* Name.Function */
    .nl { color: #676700 } /* Name.Label */
    .nn { color: #9393ff } /* Name.Namespace */
    .nv { color: #cfcef6 } /* Name.Variable */
    .ow { color: #ab27ff } /* Operator.Word */
    .w { color: #545454 } /* Text.Whitespace */

    /* Operator */
    /* Literal.Number, Literal.Number.{Bin, Float, Hex, Integer, Oct, Integer.Long} */
    .o, .m, .mb, .mf, .mh, .mi, .mo, .il {
      color: #999999;
    }

    /* Literal.String, Literal.String.{Affix, Backtick, Char, Delimiter, Doc, Double, Heredoc, Single} */
    .s, .sa, .sb, .sc, .dl, .sd, .s2, .sh, .s1 {
      color: #df4d4d;
    }

    .se { color: #b66321 } /* Literal.String.Escape */
    .si { color: #b65b7f } /* Literal.String.Interpol */
    .sx { color: #008500 } /* Literal.String.Other */
    .sr { color: #b65b7f } /* Literal.String.Regex */
    .ss { color: #cfcef6 } /* Literal.String.Symbol */
    .fm { color: #9393ff } /* Name.Function.Magic */

    /* Name.Variable.{Class, Globa, Instance, Magic} */
    .vc, .vg, .vi, .vm {
      color: #cfcef6;
    }

    .rustc_error   { color: #e21e12; }
    .rustc_warning { color: #08680e; }
    .rustc_value   { color: #765c09; }
    .rustc_lineno  { color: #5d67ff; }
  }
}

@media print {
  pre {
    .go {
      color: #555555;
    }
  }
}

// Disable selecting the $ or the following space in ``console`` code blocks.
// See https://alexwlchan.net/2021/10/console-copying/
.language-console {
  .gp, .gp + .w  {
    @include disable_select();
  }
}
